"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var usePlatformMethods_exports = {};
__export(usePlatformMethods_exports, {
  usePlatformMethods: () => usePlatformMethods
});
module.exports = __toCommonJS(usePlatformMethods_exports);
var import_web = require("@tamagui/web");
var import_getRect = require("../helpers/getRect");
var import_useElementLayout = require("./useElementLayout");
function usePlatformMethods(hostRef) {
  (0, import_web.useIsomorphicLayoutEffect)(() => {
    const node = hostRef.current;
    if (!node)
      return;
    node.measure = (callback) => (0, import_useElementLayout.measureLayout)(node, null, callback);
    node.measureLayout = (relativeToNode, success) => (0, import_useElementLayout.measureLayout)(node, relativeToNode, success);
    node.measureInWindow = (callback) => {
      if (!node)
        return;
      setTimeout(() => {
        const { height, left, top, width } = (0, import_getRect.getRect)(node);
        callback(left, top, width, height);
      }, 0);
    };
  }, [hostRef]);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  usePlatformMethods
});
//# sourceMappingURL=usePlatformMethods.js.map
