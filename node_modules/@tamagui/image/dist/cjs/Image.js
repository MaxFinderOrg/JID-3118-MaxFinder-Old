"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Image_exports = {};
__export(Image_exports, {
  Image: () => Image
});
module.exports = __toCommonJS(Image_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_core = require("@tamagui/core");
var import_react = require("react");
var import_react_native = require("react-native");
(0, import_core.setupReactNative)({
  Image: import_react_native.Image
});
const StyledImage = (0, import_core.styled)(import_react_native.Image, {
  name: "Image",
  position: "relative",
  source: { uri: "" }
});
let hasWarned = false;
const Image = StyledImage.extractable(
  (0, import_react.forwardRef)((inProps, ref) => {
    const props = (0, import_core.useProps)(inProps);
    const { src, source, ...rest } = props;
    if (process.env.NODE_ENV === "development") {
      if (typeof src === "string") {
        if (typeof props.width === "string" && props.width[0] !== "$" || typeof props.height === "string" && props.height[0] !== "$") {
          if (!hasWarned) {
            hasWarned = true;
            console.warn(
              `React Native expects a numerical width/height. If you want to use a percent you must define the "source" prop with width, height, and uri.`
            );
          }
        }
      }
    }
    const finalSource = typeof src === "string" ? { uri: src, ...import_core.isWeb && { width: props.width, height: props.height } } : source ?? src;
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(StyledImage, { ref, source: finalSource, ...rest });
  })
);
Image.getSize = import_react_native.Image.getSize;
Image.getSizeWithHeaders = import_react_native.Image.getSizeWithHeaders;
Image.prefetch = import_react_native.Image.prefetch;
Image.prefetchWithMetadata = import_react_native.Image.prefetchWithMetadata;
Image.abortPrefetch = import_react_native.Image.abortPrefetch;
Image.queryCache = import_react_native.Image.queryCache;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Image
});
//# sourceMappingURL=Image.js.map
