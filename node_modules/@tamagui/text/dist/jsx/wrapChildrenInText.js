import React from "react";
function wrapChildrenInText(TextComponent, propsIn, extraProps) {
  const {
    children,
    textProps,
    size,
    noTextWrap,
    color,
    fontFamily,
    fontSize,
    fontWeight,
    letterSpacing,
    textAlign,
    fontStyle,
    maxFontSizeMultiplier
  } = propsIn;
  if (noTextWrap || !children) {
    return [children];
  }
  const props = {
    ...extraProps
  };
  if (color)
    props.color = color;
  if (fontFamily)
    props.fontFamily = fontFamily;
  if (fontSize)
    props.fontSize = fontSize;
  if (fontWeight)
    props.fontWeight = fontWeight;
  if (letterSpacing)
    props.letterSpacing = letterSpacing;
  if (textAlign)
    props.textAlign = textAlign;
  if (size)
    props.size = size;
  if (fontStyle)
    props.fontStyle = fontStyle;
  if (maxFontSizeMultiplier)
    props.maxFontSizeMultiplier = maxFontSizeMultiplier;
  return React.Children.toArray(children).map((child, index) => {
    return typeof child === "string" ? (
      // so "data-disable-theme" is a hack to fix themeInverse, don't ask me why
      <TextComponent key={index} {...props} {...textProps}>{child}</TextComponent>
    ) : child;
  });
}
export {
  wrapChildrenInText
};
//# sourceMappingURL=wrapChildrenInText.js.map
