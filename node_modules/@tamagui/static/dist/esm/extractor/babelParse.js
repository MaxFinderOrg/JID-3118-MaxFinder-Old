import * as babelParser from "@babel/parser";
const plugins = [
  "asyncGenerators",
  "classProperties",
  "dynamicImport",
  "functionBind",
  "jsx",
  "numericSeparator",
  "objectRestSpread",
  "optionalCatchBinding",
  "decorators-legacy",
  "typescript",
  "optionalChaining",
  "nullishCoalescingOperator"
];
const parserOptions = Object.freeze({
  plugins,
  sourceType: "module"
});
const parser = babelParser.parse.bind(babelParser);
function babelParse(code, fileName) {
  const codeString = code.toString();
  try {
    return parser(codeString, parserOptions);
  } catch (err) {
    throw new Error(
      `Error parsing babel: ${err} in ${fileName}, code:
${codeString}
 ${err.stack}`
    );
  }
}
export {
  babelParse,
  parserOptions
};
//# sourceMappingURL=babelParse.js.map
