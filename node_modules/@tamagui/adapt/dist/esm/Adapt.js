import { jsx } from "react/jsx-runtime";
import {
  isTouchable,
  isWeb,
  useIsomorphicLayoutEffect,
  useMedia,
  withStaticProperties
} from "@tamagui/core";
import { createContext, createElement, useContext, useMemo, useState } from "react";
const AdaptParentContext = createContext(null);
const AdaptContents = (props) => {
  const context = useContext(AdaptParentContext);
  if (!(context == null ? void 0 : context.Contents)) {
    throw new Error("Adapt not supported by this component");
  }
  return createElement(context.Contents, props);
};
AdaptContents.shouldForwardSpace = true;
const useAdaptParent = ({
  Contents
}) => {
  const [when, setWhen] = useState(null);
  const AdaptProvider = useMemo(() => {
    const context = {
      Contents,
      setWhen
    };
    function AdaptProviderView(props) {
      return /* @__PURE__ */ jsx(AdaptParentContext.Provider, { value: context, children: props.children });
    }
    return AdaptProviderView;
  }, [Contents]);
  return {
    AdaptProvider,
    when
  };
};
const Adapt = withStaticProperties(
  function Adapt2({ platform, when, children }) {
    const context = useContext(AdaptParentContext);
    const media = useMedia();
    let enabled = !platform;
    if (platform === "touch")
      enabled = isTouchable;
    if (platform === "native")
      enabled = !isWeb;
    if (platform === "web")
      enabled = isWeb;
    if (when && !media[when]) {
      enabled = false;
    }
    useIsomorphicLayoutEffect(() => {
      if (!enabled)
        return;
      context == null ? void 0 : context.setWhen(when || enabled);
    }, [when, context, enabled]);
    if (!enabled) {
      return null;
    }
    return children;
  },
  {
    Contents: AdaptContents
  }
);
export {
  Adapt,
  AdaptContents,
  AdaptParentContext,
  useAdaptParent
};
//# sourceMappingURL=Adapt.js.map
