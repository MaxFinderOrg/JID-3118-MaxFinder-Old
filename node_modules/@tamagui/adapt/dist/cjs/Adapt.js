"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Adapt_exports = {};
__export(Adapt_exports, {
  Adapt: () => Adapt,
  AdaptContents: () => AdaptContents,
  AdaptParentContext: () => AdaptParentContext,
  useAdaptParent: () => useAdaptParent
});
module.exports = __toCommonJS(Adapt_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_core = require("@tamagui/core");
var import_react = require("react");
const AdaptParentContext = (0, import_react.createContext)(null);
const AdaptContents = (props) => {
  const context = (0, import_react.useContext)(AdaptParentContext);
  if (!(context == null ? void 0 : context.Contents)) {
    throw new Error("Adapt not supported by this component");
  }
  return (0, import_react.createElement)(context.Contents, props);
};
AdaptContents.shouldForwardSpace = true;
const useAdaptParent = ({
  Contents
}) => {
  const [when, setWhen] = (0, import_react.useState)(null);
  const AdaptProvider = (0, import_react.useMemo)(() => {
    const context = {
      Contents,
      setWhen
    };
    function AdaptProviderView(props) {
      return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AdaptParentContext.Provider, { value: context, children: props.children });
    }
    return AdaptProviderView;
  }, [Contents]);
  return {
    AdaptProvider,
    when
  };
};
const Adapt = (0, import_core.withStaticProperties)(
  function Adapt2({ platform, when, children }) {
    const context = (0, import_react.useContext)(AdaptParentContext);
    const media = (0, import_core.useMedia)();
    let enabled = !platform;
    if (platform === "touch")
      enabled = import_core.isTouchable;
    if (platform === "native")
      enabled = !import_core.isWeb;
    if (platform === "web")
      enabled = import_core.isWeb;
    if (when && !media[when]) {
      enabled = false;
    }
    (0, import_core.useIsomorphicLayoutEffect)(() => {
      if (!enabled)
        return;
      context == null ? void 0 : context.setWhen(when || enabled);
    }, [when, context, enabled]);
    if (!enabled) {
      return null;
    }
    return children;
  },
  {
    Contents: AdaptContents
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Adapt,
  AdaptContents,
  AdaptParentContext,
  useAdaptParent
});
//# sourceMappingURL=Adapt.js.map
