"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ToastAnnounce_exports = {};
__export(ToastAnnounce_exports, {
  ToastAnnounce: () => ToastAnnounce,
  ToastAnnounceExclude: () => ToastAnnounceExclude
});
module.exports = __toCommonJS(ToastAnnounce_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_core = require("@tamagui/core");
var import_portal = require("@tamagui/portal");
var import_visually_hidden = require("@tamagui/visually-hidden");
var React = __toESM(require("react"));
var import_constants = require("./constants");
var import_ToastProvider = require("./ToastProvider");
const ToastAnnounceExcludeFrame = (0, import_core.styled)(import_core.Stack, {
  name: "ToastAnnounceExclude"
});
const ToastAnnounceExclude = React.forwardRef(
  (props, forwardedRef) => {
    const { __scopeToast, altText, ...announceExcludeProps } = props;
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      ToastAnnounceExcludeFrame,
      {
        "data-toast-announce-exclude": "",
        "data-toast-announce-alt": altText || void 0,
        ...announceExcludeProps,
        ref: forwardedRef
      }
    );
  }
);
const ToastAnnounce = (props) => {
  const { __scopeToast, children, ...announceProps } = props;
  const context = (0, import_ToastProvider.useToastProviderContext)(import_constants.TOAST_NAME, __scopeToast);
  const [renderAnnounceText, setRenderAnnounceText] = React.useState(false);
  const [isAnnounced, setIsAnnounced] = React.useState(false);
  useNextFrame(() => setRenderAnnounceText(true));
  React.useEffect(() => {
    const timer = setTimeout(() => setIsAnnounced(true), 1e3);
    return () => clearTimeout(timer);
  }, []);
  return isAnnounced ? null : /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_portal.Portal, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_visually_hidden.VisuallyHidden, { ...announceProps, children: renderAnnounceText && /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(import_core.Text, { children: [
    context.label,
    " ",
    children
  ] }) }) });
};
function useNextFrame(callback = () => {
}) {
  const fn = (0, import_core.useEvent)(callback);
  (0, import_core.useIsomorphicLayoutEffect)(() => {
    let raf1 = 0;
    let raf2 = 0;
    raf1 = requestAnimationFrame(() => {
      raf2 = requestAnimationFrame(fn);
    });
    return () => {
      cancelAnimationFrame(raf1);
      cancelAnimationFrame(raf2);
    };
  }, [fn]);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ToastAnnounce,
  ToastAnnounceExclude
});
//# sourceMappingURL=ToastAnnounce.js.map
