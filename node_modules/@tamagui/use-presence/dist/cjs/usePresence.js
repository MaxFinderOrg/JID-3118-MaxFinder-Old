"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var usePresence_exports = {};
__export(usePresence_exports, {
  isPresent: () => isPresent,
  useIsPresent: () => useIsPresent,
  usePresence: () => usePresence
});
module.exports = __toCommonJS(usePresence_exports);
var import_react = require("react");
var import_PresenceContext = require("./PresenceContext");
function usePresence() {
  const context = (0, import_react.useContext)(import_PresenceContext.PresenceContext);
  if (!context) {
    return [true, null, context];
  }
  const { isPresent: isPresent2, onExitComplete, register } = context;
  const id = (0, import_react.useId)() || "";
  (0, import_react.useEffect)(() => register(id), [id, register]);
  const safeToRemove = () => onExitComplete == null ? void 0 : onExitComplete(id);
  return !isPresent2 && onExitComplete ? [false, safeToRemove, context] : [true, void 0, context];
}
function useIsPresent() {
  return isPresent((0, import_react.useContext)(import_PresenceContext.PresenceContext));
}
function isPresent(context) {
  return context === null ? true : context.isPresent;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isPresent,
  useIsPresent,
  usePresence
});
//# sourceMappingURL=usePresence.js.map
