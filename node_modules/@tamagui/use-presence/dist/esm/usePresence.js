import { useContext, useEffect, useId } from "react";
import { PresenceContext } from "./PresenceContext";
function usePresence() {
  const context = useContext(PresenceContext);
  if (!context) {
    return [true, null, context];
  }
  const { isPresent: isPresent2, onExitComplete, register } = context;
  const id = useId() || "";
  useEffect(() => register(id), [id, register]);
  const safeToRemove = () => onExitComplete == null ? void 0 : onExitComplete(id);
  return !isPresent2 && onExitComplete ? [false, safeToRemove, context] : [true, void 0, context];
}
function useIsPresent() {
  return isPresent(useContext(PresenceContext));
}
function isPresent(context) {
  return context === null ? true : context.isPresent;
}
export {
  isPresent,
  useIsPresent,
  usePresence
};
//# sourceMappingURL=usePresence.js.map
