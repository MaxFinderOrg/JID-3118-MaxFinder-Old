const useSheetOffscreenSize = ({
  snapPoints,
  position,
  screenSize,
  frameSize,
  snapPointsMode
}) => {
  if (snapPointsMode === "fit") {
    return 0;
  }
  if (snapPointsMode === "constant") {
    const maxSize2 = Number(snapPoints[0]);
    const currentSize2 = Number(snapPoints[position] ?? 0);
    const offscreenSize2 = maxSize2 - currentSize2;
    return offscreenSize2;
  }
  if (snapPointsMode === "percent") {
    const maxPercentOpened = Number(snapPoints[0]) / 100;
    const percentOpened = Number(snapPoints[position] ?? 0) / 100;
    const percentHidden = 1 - maxPercentOpened - percentOpened;
    const offscreenSize2 = percentHidden * screenSize;
    return offscreenSize2;
  }
  const maxSnapPoint = snapPoints[0];
  const maxSize = maxSnapPoint === "fit" ? frameSize : typeof maxSnapPoint === "string" ? Number(maxSnapPoint.slice(0, -1)) / 100 * screenSize : maxSnapPoint;
  const currentSnapPoint = snapPoints[position] ?? 0;
  const currentSize = currentSnapPoint === "fit" ? frameSize : typeof currentSnapPoint === "string" ? Number(currentSnapPoint.slice(0, -1)) / 100 * screenSize : currentSnapPoint;
  const offscreenSize = maxSize - currentSize;
  if (Number.isNaN(offscreenSize)) {
    return 0;
  }
  return offscreenSize;
};
export {
  useSheetOffscreenSize
};
//# sourceMappingURL=useSheetOffscreenSize.js.map
