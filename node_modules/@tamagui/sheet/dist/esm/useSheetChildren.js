import React, { isValidElement } from "react";
function useSheetChildren(childrenProp) {
  let handleComponent = null;
  let overlayComponent = null;
  let frameComponent = null;
  React.Children.forEach(childrenProp, (child) => {
    var _a, _b;
    if (isValidElement(child)) {
      const name = (_b = (_a = child.type) == null ? void 0 : _a["staticConfig"]) == null ? void 0 : _b.componentName;
      switch (name) {
        case "SheetHandle":
          handleComponent = child;
          break;
        case "Sheet":
          frameComponent = child;
          break;
        case "SheetOverlay":
          overlayComponent = child;
          break;
        default:
          console.warn("Warning: passed invalid child to Sheet", child);
      }
    }
  });
  let bottomCoverComponent = null;
  if (frameComponent) {
    bottomCoverComponent = React.cloneElement(frameComponent, {
      children: null,
      position: "absolute",
      bottom: -100,
      height: 110,
      left: 0,
      right: 0
    });
  }
  return {
    handleComponent,
    overlayComponent,
    frameComponent,
    bottomCoverComponent
  };
}
export {
  useSheetChildren
};
//# sourceMappingURL=useSheetChildren.js.map
