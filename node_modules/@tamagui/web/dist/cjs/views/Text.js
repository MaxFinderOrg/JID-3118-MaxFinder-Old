"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Text_exports = {};
__export(Text_exports, {
  Text: () => Text
});
module.exports = __toCommonJS(Text_exports);
var import_helpers = require("@tamagui/helpers");
var import_createComponent = require("../createComponent");
const ellipseStyle = {
  maxWidth: "100%",
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap"
};
const Text = (0, import_createComponent.createComponent)({
  acceptsClassName: true,
  isText: true,
  defaultProps: process.env.TAMAGUI_TARGET === "web" ? {
    color: "$color",
    display: "inline",
    boxSizing: "border-box",
    wordWrap: "break-word",
    margin: 0
  } : {
    color: "$color",
    display: "flex",
    suppressHighlighting: true
  },
  inlineWhenUnflattened: /* @__PURE__ */ new Set(["fontFamily"]),
  variants: {
    ...process.env.TAMAGUI_TARGET === "web" && {
      numberOfLines: {
        1: ellipseStyle,
        ":number": (numberOfLines) => numberOfLines >= 1 ? {
          WebkitLineClamp: numberOfLines,
          WebkitBoxOrient: "vertical",
          display: "-webkit-box",
          overflow: "hidden"
        } : null
      }
    },
    // ??
    ellipsizeMode: {
      "...": () => null
    },
    ...process.env.TAMAGUI_TARGET === "web" && {
      selectable: {
        true: {
          userSelect: "text",
          cursor: "text"
        },
        false: {
          userSelect: "none",
          cursor: "default"
        }
      }
    },
    ellipse: {
      true: process.env.TAMAGUI_TARGET === "web" ? ellipseStyle : {
        numberOfLines: 1,
        lineBreakMode: "clip"
      }
    }
  },
  deoptProps: new Set(process.env.TAMAGUI_TARGET === "web" ? [] : ["ellipse"]),
  validStyles: {
    ...import_helpers.validStyles,
    ...import_helpers.stylePropsTextOnly
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Text
});
//# sourceMappingURL=Text.js.map
