"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ThemeProvider_exports = {};
__export(ThemeProvider_exports, {
  ThemeProvider: () => ThemeProvider
});
module.exports = __toCommonJS(ThemeProvider_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_constants = require("@tamagui/constants");
var import_react = require("react");
var import_constants2 = require("../constants/constants");
var import_Theme = require("./Theme");
const ThemeProvider = (props) => {
  if (import_constants.isClient) {
    (0, import_react.useLayoutEffect)(() => {
      if (props.disableRootThemeClass)
        return;
      const cn = `${import_constants2.THEME_CLASSNAME_PREFIX}${props.defaultTheme}`;
      const target = props.themeClassNameOnRoot ? document.documentElement : document.body;
      target.classList.add(cn);
      return () => {
        target.classList.remove(cn);
      };
    }, [props.defaultTheme, props.disableRootThemeClass, props.themeClassNameOnRoot]);
  }
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_Theme.Theme,
    {
      className: props.className,
      name: props.defaultTheme,
      forceClassName: !props.disableRootThemeClass,
      _isRoot: true,
      children: props.children
    }
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ThemeProvider
});
//# sourceMappingURL=ThemeProvider.js.map
