"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var themeable_exports = {};
__export(themeable_exports, {
  themeable: () => themeable
});
module.exports = __toCommonJS(themeable_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_react = __toESM(require("react"));
var import_Theme = require("../views/Theme");
function themeable(component, staticConfig) {
  const withThemeComponent = (0, import_react.forwardRef)(function WithTheme(props, ref) {
    const { themeInverse, theme, componentName, themeReset, ...rest } = props;
    const element = import_react.default.createElement(component, {
      ...rest,
      ref,
      "data-disable-theme": true
    });
    let contents = /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_Theme.Theme,
      {
        componentName: componentName || (staticConfig == null ? void 0 : staticConfig.componentName),
        name: theme || null,
        "disable-child-theme": true,
        debug: props.debug,
        inverse: themeInverse,
        reset: themeReset,
        children: element
      }
    );
    return contents;
  });
  const withTheme = withThemeComponent;
  withTheme.displayName = `Themed(${(component == null ? void 0 : component.displayName) || (component == null ? void 0 : component.name) || "Anonymous"})`;
  return withTheme;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  themeable
});
//# sourceMappingURL=themeable.js.map
