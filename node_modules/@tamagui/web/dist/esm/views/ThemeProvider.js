import { jsx } from "react/jsx-runtime";
import { isClient } from "@tamagui/constants";
import { useLayoutEffect } from "react";
import { THEME_CLASSNAME_PREFIX } from "../constants/constants";
import { Theme } from "./Theme";
const ThemeProvider = (props) => {
  if (isClient) {
    useLayoutEffect(() => {
      if (props.disableRootThemeClass)
        return;
      const cn = `${THEME_CLASSNAME_PREFIX}${props.defaultTheme}`;
      const target = props.themeClassNameOnRoot ? document.documentElement : document.body;
      target.classList.add(cn);
      return () => {
        target.classList.remove(cn);
      };
    }, [props.defaultTheme, props.disableRootThemeClass, props.themeClassNameOnRoot]);
  }
  return /* @__PURE__ */ jsx(
    Theme,
    {
      className: props.className,
      name: props.defaultTheme,
      forceClassName: !props.disableRootThemeClass,
      _isRoot: true,
      children: props.children
    }
  );
};
export {
  ThemeProvider
};
//# sourceMappingURL=ThemeProvider.js.map
