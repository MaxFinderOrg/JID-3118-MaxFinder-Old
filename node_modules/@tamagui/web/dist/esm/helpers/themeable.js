import { jsx } from "react/jsx-runtime";
import React, { forwardRef } from "react";
import { Theme } from "../views/Theme";
function themeable(component, staticConfig) {
  const withThemeComponent = forwardRef(function WithTheme(props, ref) {
    const { themeInverse, theme, componentName, themeReset, ...rest } = props;
    const element = React.createElement(component, {
      ...rest,
      ref,
      "data-disable-theme": true
    });
    let contents = /* @__PURE__ */ jsx(
      Theme,
      {
        componentName: componentName || (staticConfig == null ? void 0 : staticConfig.componentName),
        name: theme || null,
        "disable-child-theme": true,
        debug: props.debug,
        inverse: themeInverse,
        reset: themeReset,
        children: element
      }
    );
    return contents;
  });
  const withTheme = withThemeComponent;
  withTheme.displayName = `Themed(${(component == null ? void 0 : component.displayName) || (component == null ? void 0 : component.name) || "Anonymous"})`;
  return withTheme;
}
export {
  themeable
};
//# sourceMappingURL=themeable.js.map
