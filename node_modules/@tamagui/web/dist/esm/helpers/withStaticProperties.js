import { createElement, forwardRef } from "react";
const Decorated = Symbol();
const withStaticProperties = function(component, staticProps) {
  const next = (() => {
    if (component[Decorated]) {
      const _ = forwardRef(
        (props, ref) => createElement(component, { ...props, ref })
      );
      for (const key in component) {
        const v = component[key];
        _[key] = v && typeof v === "object" ? { ...v } : v;
      }
    }
    return component;
  })();
  Object.assign(next, staticProps);
  next[Decorated] = true;
  return next;
};
export {
  withStaticProperties
};
//# sourceMappingURL=withStaticProperties.js.map
