import { isWeb } from "@tamagui/constants";
import { simpleHash } from "@tamagui/helpers";
import { getConfig } from "./config";
const IS_VAR = "isVar";
const createVariable = (props, skipHash = false) => {
  if (!skipHash && isVariable(props))
    return props;
  const { key, name, val } = props;
  return {
    [IS_VAR]: true,
    key,
    name: skipHash ? "" : simpleHash(name, 40),
    val,
    variable: isWeb ? skipHash ? `var(--${name})` : createCSSVariable(name) : ""
  };
};
function variableToString(vrble, getValue = false) {
  if (isVariable(vrble)) {
    if (!getValue && isWeb && vrble.variable) {
      return vrble.variable;
    }
    return `${vrble.val}`;
  }
  return `${vrble || ""}`;
}
function isVariable(v) {
  return v && typeof v === "object" && IS_VAR in v;
}
function getVariable(nameOrVariable) {
  setDidGetVariableValue(true);
  if (isVariable(nameOrVariable)) {
    return variableToString(nameOrVariable);
  }
  const tokens = getConfig().tokensParsed;
  return variableToString(tokens[nameOrVariable] ?? nameOrVariable);
}
let accessed = false;
const setDidGetVariableValue = (val) => accessed = val;
const didGetVariableValue = () => accessed;
function getVariableValue(v) {
  if (isVariable(v)) {
    setDidGetVariableValue(true);
    return v.val;
  }
  return v;
}
function getVariableName(v) {
  if (isVariable(v))
    return v.name;
  return v;
}
function getVariableVariable(v) {
  if (isVariable(v))
    return v.variable;
  return v;
}
const createCSSVariable = (nameProp, includeVar = true) => {
  if (process.env.NODE_ENV === "development") {
    if (!nameProp || typeof nameProp !== "string") {
      throw new Error(`createCSSVariable expected string, got: ${nameProp}`);
    }
  }
  const name = simpleHash(nameProp, 60);
  return includeVar ? `var(--${name})` : name;
};
export {
  createCSSVariable,
  createVariable,
  didGetVariableValue,
  getVariable,
  getVariableName,
  getVariableValue,
  getVariableVariable,
  isVariable,
  setDidGetVariableValue,
  variableToString
};
//# sourceMappingURL=createVariable.js.map
