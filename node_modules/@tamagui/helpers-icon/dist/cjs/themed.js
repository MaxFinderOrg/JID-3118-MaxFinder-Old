"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var themed_exports = {};
__export(themed_exports, {
  themed: () => themed
});
module.exports = __toCommonJS(themed_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_core = require("@tamagui/core");
function themed(Component, opts = {
  defaultThemeColor: process.env.DEFAULT_ICON_THEME_COLOR || "$color",
  defaultStrokeWidth: 2,
  fallbackColor: "#000"
}) {
  const wrapped = (propsIn) => {
    const props = (0, import_core.useProps)(propsIn);
    const theme = (0, import_core.useTheme)();
    const defaultColor = props.color ?? opts.defaultThemeColor;
    const color = (0, import_core.getVariable)(
      (defaultColor ? theme[defaultColor] : void 0) || props.color || (!props.disableTheme ? theme.color : null) || opts.fallbackColor
    );
    const size = typeof props.size === "string" ? (0, import_core.getTokenValue)(props.size, "size") : props.size;
    const strokeWidth = typeof props.strokeWidth === "string" ? (0, import_core.getTokenValue)(props.strokeWidth, "size") : props.strokeWidth ?? `${opts.defaultStrokeWidth}`;
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Component, { ...props, color, size, strokeWidth });
  };
  return wrapped;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  themed
});
//# sourceMappingURL=themed.js.map
