import { jsx } from "react/jsx-runtime";
import { getTokenValue, getVariable, useProps, useTheme } from "@tamagui/core";
function themed(Component, opts = {
  defaultThemeColor: process.env.DEFAULT_ICON_THEME_COLOR || "$color",
  defaultStrokeWidth: 2,
  fallbackColor: "#000"
}) {
  const wrapped = (propsIn) => {
    const props = useProps(propsIn);
    const theme = useTheme();
    const defaultColor = props.color ?? opts.defaultThemeColor;
    const color = getVariable(
      (defaultColor ? theme[defaultColor] : void 0) || props.color || (!props.disableTheme ? theme.color : null) || opts.fallbackColor
    );
    const size = typeof props.size === "string" ? getTokenValue(props.size, "size") : props.size;
    const strokeWidth = typeof props.strokeWidth === "string" ? getTokenValue(props.strokeWidth, "size") : props.strokeWidth ?? `${opts.defaultStrokeWidth}`;
    return /* @__PURE__ */ jsx(Component, { ...props, color, size, strokeWidth });
  };
  return wrapped;
}
export {
  themed
};
//# sourceMappingURL=themed.js.map
