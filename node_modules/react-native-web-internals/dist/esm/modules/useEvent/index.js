import createEventHandle from "../createEventHandle/index";
import useLayoutEffect from "../useLayoutEffect/index";
import useStable from "../useStable/index";
function useEvent(event, options) {
  const targetListeners = useStable(() => /* @__PURE__ */ new Map());
  const addListener = useStable(() => {
    const addEventListener = createEventHandle(event, options);
    return (target, callback) => {
      const removeTargetListener = targetListeners.get(target);
      if (removeTargetListener != null) {
        removeTargetListener();
      }
      if (callback == null) {
        targetListeners.delete(target);
      }
      const removeEventListener = addEventListener(target, callback);
      targetListeners.set(target, removeEventListener);
      return removeEventListener;
    };
  });
  useLayoutEffect(() => {
    return () => {
      targetListeners.forEach((removeListener) => {
        removeListener();
      });
      targetListeners.clear();
    };
  }, [targetListeners]);
  return addListener;
}
export {
  useEvent as default
};
//# sourceMappingURL=index.js.map
